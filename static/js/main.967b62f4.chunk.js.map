{"version":3,"sources":["colors.js","components/styles.js","components/LoadingDots.js","components/chatbox.js","App/styles.js","App/index.js","serviceWorker.js","index.js"],"names":["colors","Container","styled","div","ContainerInner","SpeechBubble","props","left","right","Text","textarea","BounceAnimation","keyframes","DotWrapper","Dot","delay","LoadingDots","Component","Chatbox","response","correct","message","answer","handleKeyDown","e","key","preventDefault","state","index","length","textField","text","setState","typing","prevState","messages","user","tries","indexOf","trim","toLowerCase","setTimeout","this","score","bind","getWrong","handleChange","target","value","maxScrollTop","messageList","scrollHeight","clientHeight","scrollTop","scrollToBottom","ref","map","item","i","onKeyDown","onChange","multiline","placeholder","React","TopContainer","GlobalStyle","createGlobalStyle","App","h1","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gTAAaA,EACG,UADHA,EAGD,UAHCA,EAII,UAJJA,EAKI,UALJA,EAOE,UAPFA,EAQC,UARDA,EASE,UATFA,EAWF,U,04DCRJ,IAAMC,EAAYC,IAAOC,IAAV,IAKEH,GAQXI,EAAiBF,IAAOC,IAAV,IAEHH,EACVA,GAUDK,EAAeH,IAAOC,IAAV,IAED,SAAAG,GAAK,OAAKA,EAAMC,KAAMP,EAAqBA,GACrD,SAAAM,GAAK,OAAKA,EAAMC,KAAMP,EAAqBA,GAU5C,SAAAM,GAAK,OAAKA,EAAME,MAAQ,QAAU,QAO5B,SAAAF,GAAK,OAAKA,EAAMC,KAAO,EAAI,GAIX,SAAAD,GAAK,OAAKA,EAAMC,KAAMP,EAAqBA,GAQ3D,SAAAM,GAAK,OAAKA,EAAME,MAAQ,EAAI,GAIb,SAAAF,GAAK,OAAKA,EAAMC,KAAMP,EAAqBA,IAQhES,EAAOP,IAAOQ,SAAV,IACOV,EACAA,EACVA,G,+kBC1Ed,IAAMW,EAAkBC,YAAH,KAKfC,EAAaX,IAAOC,IAAV,KAMVW,EAAMZ,IAAOC,IAAV,IAOMQ,EACM,SAAAL,GAAK,OAAIA,EAAMS,QAcrBC,E,iLATX,OACE,kBAACH,EAAD,KACE,kBAACC,EAAD,CAAKC,MAAM,OACX,kBAACD,EAAD,CAAKC,MAAM,QACX,kBAACD,EAAD,CAAKC,MAAM,a,GANOE,aCgJXC,E,YAnKX,WAAYZ,GAAQ,IAAD,8BACf,4CAAMA,KAgCVa,SAAW,CACP,CACIC,QAAQ,uIAERC,QAAQ,6HACRC,OAAQ,SAEZ,CACIF,QAAQ,kLACRC,QAAQ,kHACRC,OAAQ,aAEZ,CACIF,QAAQ,kGACRC,QAAQ,sLACRC,OAAQ,UAEZ,CACIF,QAAQ,2LACRC,QAAQ,uKACRC,OAAQ,MAEZ,CACIF,QAAQ,0FACRC,QAAQ,4FACRC,OAAQ,UAEZ,CACIF,QAAQ,6DACRC,QAAQ,iGACRC,OAAQ,WA/DG,EAmEnBC,cAAgB,SAACC,GACb,GAAc,UAAVA,EAAEC,MACFD,EAAEE,iBACC,EAAKC,MAAMC,MAAQ,EAAKT,SAASU,QAE7B,EAAKF,MAAMG,UAAUD,OAAS,GAAE,CAC/B,IAAIE,EAAO,EAAKJ,MAAMG,UACtB,EAAKE,SAAS,CAACF,UAAW,KAC9B,EAAKE,SAAS,CAACC,QAAQ,IACvB,EAAKD,SAAS,SAAAE,GAAS,MAAK,CACxBC,SAAS,GAAD,mBAAMD,EAAUC,UAAhB,CAA0B,CAACd,QAASU,EAAMK,KAAM,YACxDH,QAAQ,KAEP,EAAKN,MAAMU,MAAQ,GACgE,IAA/E,EAAKlB,SAAS,EAAKQ,MAAMC,OAAON,OAAOgB,QAAQP,EAAKQ,OAAOC,eAC1DC,WACI,WAAY,IAAD,OACPC,KAAKV,SAAS,SAAAE,GAAS,MAAK,CACxBC,SAAS,GAAD,mBAAMD,EAAUC,UAAhB,CAA0B,CAACd,QAAS,EAAKF,SAAS,EAAKQ,MAAMC,OAAOR,QAASgB,KAAM,YAC7FH,QAAQ,EACRL,MAAO,EAAKD,MAAMC,MAAQ,EAC1BS,MAAO,EACPM,MAAO,EAAKhB,MAAMgB,MAAQ,MAGjCC,KATC,gBAUF,IAAqD,GAA/C,EAAKzB,SAAS,EAAKQ,MAAMC,OAAOR,QAAQS,QAG9CY,WACI,WAAY,IAAD,OACPC,KAAKV,SAAS,SAAAE,GAAS,MAAK,CACxBC,SAAS,GAAD,mBAAMD,EAAUC,UAAhB,CAA0B,CAACd,QAAS,EAAKwB,WAAYT,KAAM,YACnEH,QAAQ,EACRI,MAAO,EAAKV,MAAMU,MAAQ,MAGjCO,KAPD,gBAQA,IAA6B,GAAvB,EAAKC,WAAWhB,QAGC,IAArB,EAAKF,MAAMU,OACjBI,WACI,WAAY,IAAD,OACPC,KAAKV,SAAS,SAAAE,GAAS,MAAK,CAC5BC,SAAS,GAAD,mBAAMD,EAAUC,UAAhB,CAA0B,CAACd,QAAS,EAAKF,SAAS,EAAKQ,MAAMC,MAAM,GAAGP,QAASe,KAAM,YAC7FH,QAAQ,EACRL,MAAO,EAAKD,MAAMC,MAAQ,EAC1BS,MAAO,EACPM,MAAO,EAAKhB,MAAMgB,UAGzBC,KATG,gBAUJ,IAAqD,GAA/C,EAAKzB,SAAS,EAAKQ,MAAMC,OAAOR,QAAQS,UAxHnD,EAgIXiB,aAAe,SAACtB,GACZ,EAAKQ,SAAS,CAACF,UAAWN,EAAEuB,OAAOC,SA/H3C,EAAKrB,MAAQ,CACTQ,SAAU,CACP,CAACd,QAAQ,kFACRe,KAAM,WAEVN,UAAW,GACXG,QAAQ,EACRL,MAAO,EACPS,MAAO,EACPM,MAAO,GAXI,E,8EAgBf,IAEMM,EAFeP,KAAKQ,YAAYC,aACvBT,KAAKQ,YAAYE,aAEhCV,KAAKQ,YAAYG,UAAYJ,EAAe,EAAIA,EAAe,I,2CAI/DP,KAAKY,mB,iCAGL,OAAGZ,KAAKf,MAAMU,OAAS,EACb,gBAAN,OAAuBK,KAAKf,MAAMU,MAAlC,oBAEM,kC,+BAsGJ,IAAD,OACL,OACA,oCACCK,KAAKf,MAAMC,QAAUc,KAAKvB,SAASU,OACpC,sCAAYa,KAAKf,MAAMgB,MAAvB,MAAiCD,KAAKvB,SAASU,QAE/C,KAECa,KAAKf,MAAMC,QAAUc,KAAKvB,SAASU,OAChC,iEAAoCa,KAAKf,MAAMgB,MAA/C,OAA0DD,KAAKvB,SAASU,OAAxE,WAEA,KAEJ,kBAAC5B,EAAD,KACI,kBAACG,EAAD,CAAgBmD,IAAK,SAACpD,GAClB,EAAK+C,YAAc/C,IAElBuC,KAAKf,MAAMQ,SAASqB,IAAI,SAACC,EAAKC,GAAN,MACN,WAAdD,EAAKrB,KACN,kBAAC/B,EAAD,CAAcE,MAAI,EAACkB,IAAKiC,GAAID,EAAKpC,SAEjC,kBAAChB,EAAD,CAAcG,OAAK,EAACiB,IAAKiC,GAAID,EAAKpC,WAGrCqB,KAAKf,MAAMM,QAAU,kBAAC,EAAD,OAE1B,kBAACxB,EAAD,CAAMkD,UAAWjB,KAAKnB,cAAeqC,SAAUlB,KAAKI,aAAcE,MAAON,KAAKf,MAAMG,UAAW+B,WAAS,EAACC,YAAa,gC,GA9J5GC,IAAM9C,W,8UCDrB,IAAM+C,EAAe9D,IAAOC,IAAV,IAGHH,G,ujBCEf,IAAMiE,EAAcC,YAAH,IASFlE,EAIAA,EAGEA,GAyBTmE,GAdCjE,IAAOkE,GAAV,IAEApE,GAGD,kBACV,oCACA,kBAACiE,EAAD,MACA,kBAACD,EAAD,KACE,kBAAC,EAAD,UChCgBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.967b62f4.chunk.js","sourcesContent":["export const colors = {\r\n    darkPurple: '#231b22',\r\n    deepPurple: '#3e2f3d',\r\n    purple: '#655564',\r\n    lightPurple: '#f7daf5',\r\n    fadedPurple: '#6b4d69',\r\n\r\n    lightBlue: '#dae3e8',\r\n    deepBlue: '#2d2d42',\r\n    fadedBlue: '#485a65',\r\n\r\n    white: '#ffffff',\r\n    black: '#000000',\r\n}","import styled from 'styled-components';\r\nimport { colors } from '../colors';\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    max-width: 450px;\r\n    height: 70%;\r\n    display: inline-block;\r\n    background-color: ${colors.deepBlue};\r\n    border-radius: 3px;\r\n    padding: 25px;\r\n    padding-right: 15px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const ContainerInner = styled.div`\r\n    display: inline-block;\r\n    background-color: ${colors.deepBlue};\r\n    color:  ${colors.white};\r\n    border-radius: 3px;\r\n    padding: 15px;\r\n    padding-right: 30px;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: scroll;\r\n    position: relative;\r\n`;\r\n\r\nexport const SpeechBubble = styled.div`\r\n    display: block;\r\n    background-color: ${props => (props.left? colors.lightPurple : colors.lightBlue)};\r\n    color:  ${props => (props.left? colors.fadedPurple : colors.fadedBlue)};\r\n    font-weight: 600;\r\n    font-size: 14px;\r\n    border-radius: 5px;\r\n    padding: 12px;\r\n    min-width: 200px;\r\n    max-width: 300px;\r\n    min-height: 40px;\r\n    position: relative;\r\n    margin-top: 30px;\r\n    float: ${props => (props.right ? 'right' : 'left')};\r\n    clear: both;\r\n    &:before {\r\n        content: \"\";\r\n        position: absolute;\r\n        bottom: 0px;\r\n        left: -8px;\r\n        opacity: ${props => (props.left ? 1 : 0)};\r\n        width: 0; \r\n        height: 0; \r\n        display: inline-block;\r\n        border-right: 15px solid ${props => (props.left? colors.lightPurple : colors.lightBlue)};\r\n        border-top: 20px solid transparent;\r\n    }\r\n    &:after {\r\n        content: \"\";\r\n        position: absolute;\r\n        bottom: 0px;\r\n        right: -8px;\r\n        opacity: ${props => (props.right ? 1 : 0)};\r\n        width: 0; \r\n        height: 0; \r\n        display: inline-block;\r\n        border-left: 15px solid ${props => (props.left? colors.lightPurple : colors.lightBlue)};\r\n        border-top: 20px solid transparent;\r\n    }\r\n    & span {\r\n        font-size: 10px;\r\n    }\r\n`;\r\n\r\nexport const Text = styled.textarea`\r\n    background-color: ${colors.deepBlue};\r\n    border: 2px solid ${colors.purple};\r\n    color:  ${colors.white};\r\n    padding: 15px;\r\n    display: block;\r\n    resize: none;\r\n    margin-right: 30px;\r\n    border-radius: 3px;\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;","import React, { Component } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nconst BounceAnimation = keyframes`\r\n  0% { opacity: 0; }\r\n  50% { opacity: 1 }\r\n  100% { opacity: 0 }\r\n`;\r\nconst DotWrapper = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  position: absolute;\r\n  bottom: 20px;\r\n`;\r\nconst Dot = styled.div`\r\n  background-color: white;\r\n  border-radius: 50%;\r\n  width: 10px;\r\n  height: 10px;\r\n  margin: 0 5px;\r\n  /* Animation */\r\n  animation: ${BounceAnimation} 1s linear infinite;\r\n  animation-delay: ${props => props.delay};\r\n  animation-timing-function: ease-in-out;\r\n`;\r\nclass LoadingDots extends Component {\r\n  render() {\r\n    return (\r\n      <DotWrapper>\r\n        <Dot delay=\"0s\" />\r\n        <Dot delay=\".1s\" />\r\n        <Dot delay=\".2s\" />\r\n      </DotWrapper>\r\n    )\r\n  }\r\n}\r\nexport default LoadingDots;","import React from 'react';\r\nimport { Container, ContainerInner, SpeechBubble, Text } from './styles.js';\r\nimport LoadingDots from './LoadingDots';\r\n\r\nclass Chatbox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messages: [\r\n               {message: `Velkommen til quizen! Hva heter favoritt artisten til Daniel? (Hint: ikke Kygo)`,\r\n                user: 'Helena' },\r\n            ],\r\n            textField: '',\r\n            typing: false,\r\n            index: 0,\r\n            tries: 3,\r\n            score: 0\r\n        };\r\n      }\r\n\r\n    scrollToBottom() {\r\n        const scrollHeight = this.messageList.scrollHeight;\r\n        const height = this.messageList.clientHeight;\r\n        const maxScrollTop = scrollHeight - height;\r\n        this.messageList.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.scrollToBottom();\r\n    }\r\n    getWrong(){\r\n        if(this.state.tries >= 1){\r\n            return `Feil! du har ${this.state.tries} forsøk igjen`;\r\n        }else {\r\n            return `Feil! du er tom for forsøk`;\r\n        }\r\n    }\r\n\r\n    response = [\r\n        {\r\n            correct: `Han digger å høre på sin egen musikk 😘,  \r\n            Neste spørsmål: hva er favoritt drikken til Daniel?`,\r\n            message: `Riktig svar er Cola såklart. Lett spørsmål siden forrige var så vanskelig: hva er favoritt drikken til Daniel?`,\r\n            answer: 'naden',\r\n        },\r\n        {\r\n            correct: `Riktig! Det er Cooolaaaa! Det var en natt der Daniel våknet med intens krampe i foten og søkte opp hva det var symptom på 🤒, hva fant Daniel ut at han var?`,\r\n            message: `Svaret er Naden Han digger å høre på sin egen musikk 😘: Hva er favoritt drikken til Daniel?`,\r\n            answer: 'cola zero',\r\n        },\r\n        {\r\n            correct: `Riktig! Han er gravid i 26 måned, babyen må jo komme snart? Hvor mange fingre har Daniel?`,\r\n            message: `Feil Daniel sin favoritt drikk er Cola Zero, er det så rart? når den er bevist til å kurere alt av sykdommer 😁. Hvor mange fingre har Daniel på kroppen sin?`,\r\n            answer: 'gravid',\r\n        },\r\n        {\r\n            correct: `Riktig! Daniel har 10 fingre på kroppen sin, problemet er at de er så lange at de kunne like gjerne vært 20 fingre ✌️ Hvor var Daniel og Helena på ferie i sommer?`,\r\n            message: `Daniel har 10 fingre på kroppen sin, problemet er at de er så lange at de kunne like gjerne vært 20 fingre. Hvor var Daniel og Helena på ferie i sommer?`,\r\n            answer: '10',\r\n        },\r\n        {\r\n            correct: `Riktig! De var på ferie i Italia. Hvilken jente synest han er den vakreste i verden?`,\r\n            message: `De var på ferie i Italia, Bonjour!. Hvilken jente synest han er den vakreste i verden?`,\r\n            answer: 'italia',\r\n        },\r\n        {\r\n            correct: `Det er meg! Jeg vet!! 😍😍😍`,\r\n            message: `Riktig svar er Helena Felix De Melo såklart, har du sett det smilet? Oh my god 😍`,\r\n            answer: 'helena',\r\n        },\r\n    ];\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            if(this.state.index < this.response.length){\r\n\r\n                if(this.state.textField.length > 0){\r\n                    var text = this.state.textField;\r\n                    this.setState({textField: ''});\r\n                this.setState({typing: true});\r\n                this.setState(prevState => ({\r\n                    messages: [...prevState.messages, {message: text, user: 'Daniel'}],\r\n                    typing: true\r\n                  }))\r\n                  if(this.state.tries > 0) {\r\n                      if(this.response[this.state.index].answer.indexOf(text.trim().toLowerCase()) !== -1){\r\n                          setTimeout(\r\n                              function() {\r\n                                  this.setState(prevState => ({\r\n                                      messages: [...prevState.messages, {message: this.response[this.state.index].correct, user: 'Helena'}],\r\n                                    typing: false,\r\n                                    index: this.state.index + 1,\r\n                                    tries: 3,\r\n                                    score: this.state.score + 1,\r\n                                }))\r\n                            }\r\n                            .bind(this),\r\n                            100 + this.response[this.state.index].correct.length*20\r\n                            );\r\n                        }else {\r\n                            setTimeout(\r\n                                function() {\r\n                                    this.setState(prevState => ({\r\n                                        messages: [...prevState.messages, {message: this.getWrong(), user: 'Helena'}],\r\n                                        typing: false,\r\n                                        tries: this.state.tries - 1,\r\n                                    }))\r\n                                }\r\n                                .bind(this),\r\n                                100 + this.getWrong().length*10\r\n                                );\r\n                            }\r\n                        }else if (this.state.tries === 0) {\r\n                            setTimeout(\r\n                                function() {\r\n                                    this.setState(prevState => ({\r\n                                    messages: [...prevState.messages, {message: this.response[this.state.index+1].message, user: 'Helena'}],\r\n                                    typing: false,\r\n                                    index: this.state.index + 1,\r\n                                    tries: 3,\r\n                                    score: this.state.score,\r\n                                }))\r\n                            }\r\n                            .bind(this),\r\n                            100 + this.response[this.state.index].correct.length*10\r\n                            );\r\n                        }\r\n                    }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            handleChange = (e) => {\r\n                this.setState({textField: e.target.value});\r\n    }\r\n    render() {\r\n        return (\r\n        <>\r\n        {this.state.index === this.response.length ?\r\n        <h2>Score: {this.state.score} / {this.response.length}</h2>\r\n        :\r\n        null\r\n        }\r\n        {this.state.index === this.response.length ? \r\n            <h1>Gratulerer du fikk en score på {this.state.score} av {this.response.length} mulige</h1>\r\n            :\r\n            null\r\n        }\r\n        <Container>\r\n            <ContainerInner ref={(div) => {\r\n                this.messageList = div;\r\n            }}>\r\n                {this.state.messages.map((item,i) => \r\n                    (item.user === 'Helena') ? \r\n                    <SpeechBubble left key={i}>{item.message}</SpeechBubble>\r\n                    :\r\n                    <SpeechBubble right key={i}>{item.message}</SpeechBubble>\r\n                    )\r\n                }\r\n                {this.state.typing && <LoadingDots/>}\r\n            </ContainerInner>\r\n            <Text onKeyDown={this.handleKeyDown} onChange={this.handleChange} value={this.state.textField} multiline placeholder={'Skriv svaret ditt her'}/>\r\n        </Container>\r\n        </>\r\n        )\r\n    }\r\n}\r\nexport default Chatbox;","import styled from 'styled-components';\r\nimport { colors } from '../colors';\r\n\r\nexport const TopContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: ${colors.darkPurple};\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: 0px;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  right: 0px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;","import React from 'react';\r\nimport Chatbox from '../components/chatbox';\r\nimport { TopContainer } from './styles.js';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { colors } from '../colors';\r\nimport styled from 'styled-components';\r\nimport './styles.css';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    font-family: 'Roboto', sans-serif;\r\n    /* width */\r\n      ::-webkit-scrollbar {\r\n        width: 10px;\r\n\r\n      &-track {\r\n        background: ${colors.purple};\r\n      }\r\n\r\n      &-thumb {\r\n        background: ${colors.lightPurple};\r\n\r\n        &:hover {\r\n          background: ${colors.fadedPurple};\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  body {\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst Heading = styled.h1`\r\n    margin: 0px;\r\n    color: ${colors.deepBlue};\r\n`;\r\n\r\nconst App = () => (\r\n  <>\r\n  <GlobalStyle/>\r\n  <TopContainer>\r\n    <Chatbox/>\r\n  </TopContainer>\r\n  </>\r\n);\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}